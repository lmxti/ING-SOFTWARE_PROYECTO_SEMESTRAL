// <-----------------  BIBLIOTECAS ----------------->
import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
// <----------------- COMPONENTES --------------->
import NavBar from "@/components/NavBar";
import Mensajes from "@/components/mensajes";

// <--------------- SERVICIOS ---------------->
import { useAuth } from '../../context/AuthContext';
import { createApplication } from "@/services/application.service";
import { getGrants } from "@/services/grant.service";
import { getPersonById } from "@/services/person.service";




const Applications = () => {
  const router = useRouter();

  const { user: currentUser } = useAuth();
  console.log("Este es el usuario actual: ", currentUser.id);

  const [formData, setFormData] = useState({
    person: {
      name: "",
      surname: "",
      rut: "",
      gender: "",
      address: "",
      phone: "",
      email: "",
    },
    grant: "",
  });
  const [grantOptions, setGrantOptions] = useState([]);



  const [dataUser, setDataUser] = useState([]);

  const setPersonData = async () => {
    try {
      const response = await getPersonById(currentUser.id);
      setDataUser(response.data.data);
      console.log("Estos son los datos del usuario: ",response.data.data);
    } catch (error) {
      console.log(error);
    }
  }

  useEffect(() => {
    setPersonData();
  },[]);
  


  const handleInputChange = (event) => {
    const { name, value } = event.target;
    setFormData((prevData) => ({
      ...prevData,
      person: {
        ...prevData.person,
        [name]: value,
      },
      grant: name === "grant" ? value : prevData.grant,
    }));
  };

  const handleSubmit = async (event) => {
    event.preventDefault();

    try {
      await createApplication(formData);
      Mensajes.mensajeExito("Postulación enviada exitosamente");
    } catch (error) {
      console.error(
        "Error en la solicitud de postulación:", error.response.data);
      Mensajes.mensajeError(error.response.data.message);
    }
  };

  const subirPDF = () => {
    router.push("/pdfs/subidaPDF");
  }

  return (
    <>
    <NavBar />

    <div className="min-h-screen flex justify-center items-center text-black">
            <div className="py-12 px-12 bg-blue-100 rounded-2xl shadow-xl z-20">
                <div>
                    <h1 className="text-3xl font-bold text-center mb-4">
                        Postula a una beca
                    </h1>
                    <p className="w-80 text-center text-sm mb-8 font-semibold text-gray-700 tracking-wide">
                        Contenido explicativo para crear solicitud
                    </p>
                </div>

                <form onSubmit={handleSubmit}>
                    <div className="space-y-2">

                        <label className="block text-sm font-medium leading-6 text-gray-900">
                            Nombres
                        </label>
                        <input type="text" name="name" id="name" autoComplete="given-name" onChange={handleInputChange} value={dataUser.name}
                              className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                        />


                        <label className="block text-sm font-medium leading-6 text-gray-900">
                          Apellidos
                        </label>
                        <input type="text" name="surname" id="surname" autoComplete="given-surname" onChange={handleInputChange} value={formData.person.surname}
                          className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                        />


                        <div className="flex items-center space-x-2 space-y-2">
                          <label className="block text-sm font-medium leading-6 text-gray-900">
                            Rut
                          </label>
                          <input type="text" name="rut" id="rut" autoComplete="given-rut" onChange={handleInputChange} value={formData.person.rut}
                            className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                            />

                          <label className="block text-sm font-medium leading-6 text-gray-900" >
                            Genero
                          </label>
                          <select id="gender" name="gender" value={formData.person.gender} onChange={handleInputChange}
                            className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                            >
                              <option value="">Selecciona un genero</option>
                              <option>Masculino</option>
                              <option>Femenino</option>
                          </select>
                        </div>

                        <label className="block text-sm font-medium leading-6 text-gray-900">
                          Direccion
                        </label>
                        <input type="text" name="address" id="address" autoComplete="given-address" onChange={handleInputChange}value={formData.person.address}
                          className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                        />

                        <label className="block text-sm font-medium leading-6 text-gray-900">
                          Telefono
                        </label>
                        <input type="text" name="phone" id="phone" autoComplete="given-phone" onChange={handleInputChange} value={formData.person.phone}
                          className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                        />

                        <label className="block text-sm font-medium leading-6 text-gray-900">
                          Correo electronico
                        </label>
                        <input type="text" name="email" id="email" autoComplete="given-email" onChange={handleInputChange} value={formData.person.email}
                          className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                        />
                        </div>
                        <div className="">
                        <label className="block text-sm font-medium leading-6 text-gray-900">
                          Beca
                        </label>
                        <div className="mt-2">
                          <select
                            name="grant"
                            id="grant"
                            onChange={handleInputChange}
                            value={formData.grant}
                            className="block text-sm py-3 px-4 rounded-lg w-full border outline-none"
                          >
                            <option value="">Selecciona una beca</option>
                              {grantOptions.map((grant) => (
                            <option key={grant.id} value={grant.id}>
                            {grant.name}
                              </option>
                                ))}
                            </select>
                            </div>
                          </div>
                    <div className="text-center mt-6">
                        <button type="submit" className="py-3 w-64 text-xl text-white bg-purple-400 rounded-2xl">
                            Postular
                        </button>
                    </div>
                </form>
                <div className="text-center mt-6">
                <button className="py-3 w-64 text-xl text-white bg-purple-400 rounded-2xl cursor-pointer" onClick={subirPDF}>
            Subir documentos
      </button>
      </div>
            </div>
    </div>
    </>
  );
}

export default Applications;
